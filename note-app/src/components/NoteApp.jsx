import { useState } from 'react'; // React'Ä±n useState hook'unu import ediyoruz. Bu hook, bileÅŸenler iÃ§inde state (durum) yÃ¶netimi iÃ§in kullanÄ±lÄ±r.

function App() {
    const [notes, setNotes] = useState([ // NotlarÄ± saklamak iÃ§in bir state deÄŸiÅŸkeni (notes) ve bu deÄŸiÅŸkeni gÃ¼ncellemek iÃ§in bir fonksiyon (setNotes) oluÅŸturuyoruz. BaÅŸlangÄ±Ã§ta, Ã¶nceden tanÄ±mlanmÄ±ÅŸ notlarÄ± iÃ§eren bir dizi ile baÅŸlatÄ±yoruz.
        { id: 1, text: 'Note 1', color: 'yellow' },
        { id: 2, text: 'Note 2', color: 'lightblue' },
        { id: 3, text: 'Note 3', color: 'lightgreen' },
    ]);

    const [note, setNote] = useState(''); // Yeni notun metnini saklamak iÃ§in bir state deÄŸiÅŸkeni (note) ve bu deÄŸiÅŸkeni gÃ¼ncellemek iÃ§in bir fonksiyon (setNote) oluÅŸturuyoruz. BaÅŸlangÄ±Ã§ta boÅŸ bir string ile baÅŸlatÄ±yoruz.
    const [color, setColor] = useState('white'); // Not rengini saklamak iÃ§in bir state deÄŸiÅŸkeni (color) ve bu deÄŸiÅŸkeni gÃ¼ncellemek iÃ§in bir fonksiyon (setColor) oluÅŸturuyoruz. BaÅŸlangÄ±Ã§ta beyaz rengi ile baÅŸlatÄ±yoruz.
    const [filter, setFilter] = useState(''); // NotlarÄ± filtrelemek iÃ§in kullanÄ±lan arama metnini saklamak iÃ§in bir state deÄŸiÅŸkeni (filter) ve bu deÄŸiÅŸkeni gÃ¼ncellemek iÃ§in bir fonksiyon (setFilter) oluÅŸturuyoruz. BaÅŸlangÄ±Ã§ta boÅŸ bir string ile baÅŸlatÄ±yoruz.

    const colorOptions = ['palevioletred', 'gold', 'mediumpurple', 'lightseagreen', 'lightgreen']; // Renk seÃ§eneklerini iÃ§eren bir dizi tanÄ±mlÄ±yoruz.

    const addNote = () => { // Yeni not ekleme iÅŸlevini gerÃ§ekleÅŸtiren bir fonksiyon tanÄ±mlÄ±yoruz.
        if (note) { // EÄŸer not metni boÅŸ deÄŸilse...
            setNotes([...notes, { id: Date.now(), text: note, color }]); // Yeni notu notlar dizisine ekliyoruz.
            setNote(''); // Not metni alanÄ±nÄ± temizliyoruz.
            setColor('white'); // Renk seÃ§imi alanÄ±nÄ± varsayÄ±lan renge (beyaz) sÄ±fÄ±rlÄ±yoruz.
        }
    };

    const filteredNotes = notes.filter((n) => // NotlarÄ± filtreleme iÅŸlevini gerÃ§ekleÅŸtiren bir fonksiyon tanÄ±mlÄ±yoruz.
        n.text.toLowerCase().includes(filter.toLowerCase()) // Not metninin arama metnini iÃ§erip iÃ§ermediÄŸini kontrol ediyoruz (bÃ¼yÃ¼k/kÃ¼Ã§Ã¼k harf duyarsÄ±z).
    );

    return ( // BileÅŸenin JSX yapÄ±sÄ±nÄ± dÃ¶ndÃ¼rÃ¼yoruz.
        <div className="notes-app"> {/* Ana not uygulamasÄ± konteyneri. */}
            <h1> ğŸŒ¸ NotesApp ğŸŒ¸ </h1> {/* Not uygulamasÄ±nÄ±n baÅŸlÄ±ÄŸÄ± (Ã§iÃ§ek emojileriyle). */}
            <div className="search-bar"> {/* Arama Ã§ubuÄŸu konteyneri. */}
                <input // Arama Ã§ubuÄŸu input alanÄ±.
                    type="text"
                    value={filter}
                    onChange={(e) => setFilter(e.target.value)} // Arama metni deÄŸiÅŸtiÄŸinde state'i gÃ¼ncelliyoruz.
                    placeholder="Search..."
                />
            </div>
            <div className="new-note"> {/* Yeni not giriÅŸ alanÄ± konteyneri. */}
                <textarea // Not metni giriÅŸ alanÄ±.
                    value={note}
                    onChange={(e) => setNote(e.target.value)} // Not metni deÄŸiÅŸtiÄŸinde state'i gÃ¼ncelliyoruz.
                    placeholder="Enter your note here..."
                />
                <div className="color-picker"> {/* Renk seÃ§ici konteyneri. */}
                    {colorOptions.map((c, index) => ( // Renk seÃ§eneklerini dÃ¶ngÃ¼ ile oluÅŸturuyoruz.
                        <div // Renk seÃ§eneÄŸi div'i.
                            key={index}
                            className="color-option"
                            style={{ backgroundColor: c }} // Arka plan rengini seÃ§ilen renge ayarlÄ±yoruz.
                            onClick={() => setColor(c)} // Renk seÃ§ildiÄŸinde state'i gÃ¼ncelliyoruz.
                        />
                    ))}
                    <div className="selected-color" style={{ backgroundColor: color }}></div> {/* SeÃ§ilen rengi gÃ¶steren div. */}
                </div>
                <button onClick={addNote}>ADD</button> {/* Not ekleme butonu. */}
            </div>
            <div className="notes"> {/* Not listesi konteyneri. */}
                {filteredNotes.map((n) => ( // FiltrelenmiÅŸ notlarÄ± dÃ¶ngÃ¼ ile oluÅŸturuyoruz.
                    <div // Not div'i.
                        key={n.id}
                        className="note"
                        style={{ backgroundColor: n.color }} // Arka plan rengini notun rengine ayarlÄ±yoruz.
                    >
                        {n.text} {/* Not metni. */}
                    </div>
                ))}
            </div>
        </div>
    );
}

export default App; // BileÅŸeni dÄ±ÅŸa aktarÄ±yoruz.